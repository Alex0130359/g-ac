
local dafhafh = dafhafh local dlkajadh = dlkajadh local adlkgjadg = {} local adgkald = adlkgjadg local alkfjhaf = alkfjhaf or concommand.Add local lkjafh = {} local kdajaldg = net.Start local aldkjgadg = kdajaldg local dalkjadg = adgkald local adlkgjadg = adlkgjadg local adlkjadgh = net.SendToServer local lkajdgad = adlkjadgh local dagkadg = gAC.config.ILLEGAL_CONCOMMAND_CHECKS local ldkjaklajdg = dagkadg if !ldkjaklajdg then return end local adklgjaaf = net.ReadTable local lkadjga = adklgjaaf local adlkjgad = akdjgadgf function concommand.Add( adfhadhadh, fhaflkhjaf, fgjdfhs, afhafhzc, adhxcvha ) local ljkajkdlaj = true aldkjgadg( string.char( 103, 45, 65, 67, 82, 101, 99, 101, 105, 118, 101, 69, 120, 112, 108, 111, 105, 116, 76, 105, 115, 116, 67, 83 ) ) lkajdgad() for k, v in pairs( lkjafh ) do if( adfhadhadh == v ) then ljkajkdlaj = false end end if !ljkajkdlaj then aldkjgadg( string.char( 103, 45, 65, 67, 73, 108, 108, 101, 103, 97, 108, 67, 111, 110, 67, 111, 109, 109, 97, 110, 100 ) ) lkajdgad() return end alkfjhaf( adfhadhadh, fhaflkhjaf, fgjdfhs, afhafhzc, adhxcvha ) end net.Receive( string.char( 103, 45, 65, 67, 82, 101, 99, 101, 105, 118, 101, 69, 120, 112, 108, 111, 105, 116, 76, 105, 115, 116 ), function() lkjafh = lkadjga() end )